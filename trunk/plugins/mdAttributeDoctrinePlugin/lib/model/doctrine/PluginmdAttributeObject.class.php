<?php

/**
 * mdAttributeObject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    mdAttributePlugin
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class PluginmdAttributeObject extends BasemdAttributeObject {

    public function retrieveObject() {
        return Doctrine::getTable($this->getObjectClassName())->find($this->getObjectId());
    }

    /**
     * Saves the attribute object of the given attribute
     * @param int $id of the object
     * @param string $choice
     * @param string $value
     * @param string $class of the object
     * @param int $attId
     * @return mdAttributeObject
     * @author Rodrigo Santellan
     */
    public static function saveAttributeObject($id, $choice, $value, $class, $attId) {
        $mdAttributeObject = Doctrine::getTable('mdAttributeObject')->getMdAttributeByObjectIdAndClass($id, $class, $choice, $attId);
        if (!$mdAttributeObject) {
            $mdAttributeObject = new mdAttributeObject();
        } else {
            $mdAttributeObject = Doctrine::getTable('mdAttributeObject')->find($mdAttributeObject->getId());
        }
        $mdAttributeObject->setObjectId($id);
        $mdAttributeObject->setMdAttributeValueId($choice);
        $mdAttributeObject->setValue($value);
        $mdAttributeObject->setObjectClass($class);
        $mdAttributeObject->setMdAttributeId($attId);
        $mdAttributeObject->save();
        return $mdAttributeObject;
    }

    /**
     * Removes the attribute object
     * @param int $id
     * @param int $choice
     * @param string $value
     * @param string $class
     * @param int $attId
     * @return void
     * @author Rodrigo Santellan
     */
    public static function removeAttributeObject($id, $choice, $value, $class, $attId) {
        $mdAttributeObject = mdAttributeObject::getMdAttributeByObjectIdAndClass($id, $class, $choice, $attId);
        $mdAttributeObject = Doctrine::getTable('mdAttributeObject')->find($mdAttributeObject->getId());
        $mdAttributeObject->delete();
    }

    public static function createAndSave($objectId, $objectClass, $attributeId, $profileId, $value, $attributeValueId = null) {
        $mdAttributeObject = new mdAttributeObject();
        $mdAttributeObject->setObjectId($objectId);
        $mdAttributeObject->setObjectClassName($objectClass);
        $mdAttributeObject->setMdAttributeId($attributeId);
        $mdAttributeObject->setMdProfileId($profileId);
        $mdAttributeObject->setMdAttributeValueId($attributeValueId);
        $mdAttributeObject->setValue($value);
        $mdAttributeObject->save();
        return $mdAttributeObject;
    }

}
