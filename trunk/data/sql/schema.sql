CREATE TABLE md_saleable (id INT AUTO_INCREMENT, object_class VARCHAR(250) NOT NULL, object_id INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_saleable_relation (md_saleable_parent_id INT, md_saleable_son_id INT, PRIMARY KEY(md_saleable_parent_id, md_saleable_son_id)) ENGINE = INNODB;
CREATE TABLE md_attribute_translation (id INT, label VARCHAR(100) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_attribute (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, type_class VARCHAR(100) NOT NULL, requiered TINYINT DEFAULT 0 NOT NULL, translated TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_attribute_object_translation (id INT, value TEXT NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_attribute_object (id INT AUTO_INCREMENT, object_id INT NOT NULL, object_class_name VARCHAR(128) NOT NULL, md_attribute_id INT NOT NULL, md_attribute_value_id INT, value_non_translated text, md_profile_id INT NOT NULL, INDEX md_attribute_id_idx (md_attribute_id), INDEX md_attribute_value_id_idx (md_attribute_value_id), INDEX md_profile_id_idx (md_profile_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_attribute_value_translation (id INT, name VARCHAR(100) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_attribute_value (id INT AUTO_INCREMENT, md_attribute_id INT NOT NULL, INDEX md_attribute_id_idx (md_attribute_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_blocked_users (md_user_id INT, reason VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(md_user_id)) ENGINE = INNODB;
CREATE TABLE md_category_translation (id INT, name VARCHAR(255) NOT NULL, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX md_category_translation_sluggable_idx (slug, lang, name, id), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_category (id INT AUTO_INCREMENT, label VARCHAR(255) NOT NULL UNIQUE, object_class_name VARCHAR(250) NOT NULL, md_category_parent_id INT, priority SMALLINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_category_parent_id_idx (md_category_parent_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_category_object (object_id INT, md_category_id INT, object_class_name VARCHAR(250), priority SMALLINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(object_id, md_category_id)) ENGINE = INNODB;
CREATE TABLE md_content (id INT AUTO_INCREMENT, md_user_id INT NOT NULL, object_class VARCHAR(128) NOT NULL, object_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_user_id_idx (md_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_content_relation (md_content_id_first INT, md_content_id_second INT, object_class_name VARCHAR(128) NOT NULL, profile_name VARCHAR(128), PRIMARY KEY(md_content_id_first, md_content_id_second)) ENGINE = INNODB;
CREATE TABLE md_currency_translation (id INT, name VARCHAR(255) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_currency (id INT AUTO_INCREMENT, code VARCHAR(16) UNIQUE, symbol VARCHAR(100) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_currency_convertion (currency_from INT, currency_to INT, ratio DOUBLE(18, 8) NOT NULL, PRIMARY KEY(currency_from, currency_to)) ENGINE = INNODB;
CREATE TABLE md_dynamic_content (id INT AUTO_INCREMENT, publish_at DATETIME, publish_up_to DATETIME, type_name VARCHAR(128) DEFAULT 'dinamico' NOT NULL, priority SMALLINT DEFAULT 0, is_public TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_i18_n_manage_classes (id INT AUTO_INCREMENT, class_name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media (id INT AUTO_INCREMENT, object_class_name VARCHAR(128) NOT NULL, object_id INT NOT NULL, UNIQUE INDEX md_media_index_idx (object_class_name, object_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_album (id INT AUTO_INCREMENT, md_media_id INT, title VARCHAR(64) NOT NULL, description VARCHAR(255), type VARCHAR(255) DEFAULT 'Mixed', deleteallowed bool NOT NULL, md_media_content_id INT, counter_content BIGINT DEFAULT 0, UNIQUE INDEX md_media_album_title_index_idx (md_media_id, title), INDEX md_media_content_id_idx (md_media_content_id), INDEX md_media_id_idx (md_media_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_album_content (md_media_album_id INT, md_media_content_id INT, object_class_name VARCHAR(128) NOT NULL, priority BIGINT NOT NULL, INDEX md_media_album_content_index_idx (priority ASC), PRIMARY KEY(md_media_album_id, md_media_content_id)) ENGINE = INNODB;
CREATE TABLE md_media_content (id INT AUTO_INCREMENT, object_class_name VARCHAR(128) NOT NULL, object_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX md_media_content_index_idx (object_class_name, object_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_file (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, filetype VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_image (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_issuu_video (id INT AUTO_INCREMENT, documentid TEXT NOT NULL, embed_code text NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_video (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, duration VARCHAR(64) NOT NULL, type VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), avatar VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_vimeo_video (id INT AUTO_INCREMENT, vimeo_url VARCHAR(64) NOT NULL, title VARCHAR(255) NOT NULL, src VARCHAR(255) NOT NULL, duration VARCHAR(64) NOT NULL, description TEXT, avatar VARCHAR(255), avatar_width TINYINT, avatar_height TINYINT, author_name VARCHAR(255), author_url VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_youtube_video (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, src VARCHAR(255) NOT NULL, code VARCHAR(64) NOT NULL, duration VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), avatar VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_passport (id INT AUTO_INCREMENT, md_user_id INT NOT NULL, username VARCHAR(128) NOT NULL, password VARCHAR(128) NOT NULL, account_active TINYINT DEFAULT '0' NOT NULL, account_blocked TINYINT DEFAULT '0' NOT NULL, last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_user_id_idx (md_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_passport_remember_key (id INT AUTO_INCREMENT, md_passport_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_passport_id_idx (md_passport_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE md_product_translation (id INT, name VARCHAR(255) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_product (id INT AUTO_INCREMENT, price DOUBLE(18, 2) NOT NULL, quantity INT DEFAULT '1' NOT NULL, tax FLOAT(18, 2) DEFAULT 0 NOT NULL, is_public TINYINT(1) DEFAULT '1' NOT NULL, md_unit_id INT NOT NULL, md_currency_id INT NOT NULL, is_multiple TINYINT(1) DEFAULT '0' NOT NULL, weight FLOAT(6, 2) DEFAULT 0, volumetric_weight FLOAT(6, 2) DEFAULT 0, priority SMALLINT DEFAULT 0, INDEX md_unit_id_idx (md_unit_id), INDEX md_currency_id_idx (md_currency_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_product_search (id INT AUTO_INCREMENT, lang VARCHAR(2) NOT NULL, name VARCHAR(255) NOT NULL, is_public TINYINT(1) DEFAULT '1', descripcion TEXT, codigo TEXT, premios TEXT, presentaciones TEXT, consistencia TEXT, textura TEXT, ojos TEXT, color TEXT, sabor TEXT, humedad TEXT, materiagrasa TEXT, clasificacion TEXT, coliformes35 TEXT, coliformes45 TEXT, staphilococus TEXT, salmonella TEXT, listerya TEXT, price DOUBLE(18, 2) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_profile_translation (id INT, display VARCHAR(100) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_profile (id INT AUTO_INCREMENT, name VARCHAR(32) NOT NULL, object_class_name VARCHAR(128) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_profile_attribute (md_attribute_id INT, md_profile_id INT, PRIMARY KEY(md_attribute_id, md_profile_id)) ENGINE = INNODB;
CREATE TABLE md_profile_object (id INT AUTO_INCREMENT, object_id INT NOT NULL, object_class_name VARCHAR(64) NOT NULL, md_profile_id INT NOT NULL, active TINYINT(1) NOT NULL, INDEX md_profile_id_idx (md_profile_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_unit_translation (id INT, name VARCHAR(100) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE md_unit (id INT AUTO_INCREMENT, symbol VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_unit_convertion (id INT AUTO_INCREMENT, from_unit INT NOT NULL, to_unit INT NOT NULL, ratio FLOAT(18, 2) NOT NULL, INDEX from_unit_idx (from_unit), INDEX to_unit_idx (to_unit), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_user (id INT AUTO_INCREMENT, email VARCHAR(128) NOT NULL UNIQUE, super_admin TINYINT DEFAULT '0' NOT NULL, culture VARCHAR(2), deleted_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_user_profile (id INT AUTO_INCREMENT, name VARCHAR(128), last_name VARCHAR(128), city VARCHAR(128), country_code VARCHAR(2) DEFAULT 'UY', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_user_search (id BIGINT AUTO_INCREMENT, md_user_id INT NOT NULL, email VARCHAR(128), username VARCHAR(128), name VARCHAR(128), last_name VARCHAR(128), country_code VARCHAR(2), avatar_src TEXT, active TINYINT(1) DEFAULT '0', blocked TINYINT(1) DEFAULT '0', admin TINYINT(1) DEFAULT '0', show_email TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX username_index_idx (username), INDEX email_index_idx (email), INDEX last_name_index_idx (last_name), INDEX name_index_idx (name), INDEX md_user_id_idx (md_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE md_saleable_relation ADD CONSTRAINT md_saleable_relation_md_saleable_son_id_md_saleable_id FOREIGN KEY (md_saleable_son_id) REFERENCES md_saleable(id);
ALTER TABLE md_saleable_relation ADD CONSTRAINT md_saleable_relation_md_saleable_parent_id_md_saleable_id FOREIGN KEY (md_saleable_parent_id) REFERENCES md_saleable(id);
ALTER TABLE md_attribute_translation ADD CONSTRAINT md_attribute_translation_id_md_attribute_id FOREIGN KEY (id) REFERENCES md_attribute(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_attribute_object_translation ADD CONSTRAINT md_attribute_object_translation_id_md_attribute_object_id FOREIGN KEY (id) REFERENCES md_attribute_object(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_attribute_object ADD CONSTRAINT md_attribute_object_md_profile_id_md_profile_id FOREIGN KEY (md_profile_id) REFERENCES md_profile(id);
ALTER TABLE md_attribute_object ADD CONSTRAINT md_attribute_object_md_attribute_value_id_md_attribute_value_id FOREIGN KEY (md_attribute_value_id) REFERENCES md_attribute_value(id);
ALTER TABLE md_attribute_object ADD CONSTRAINT md_attribute_object_md_attribute_id_md_attribute_id FOREIGN KEY (md_attribute_id) REFERENCES md_attribute(id);
ALTER TABLE md_attribute_value_translation ADD CONSTRAINT md_attribute_value_translation_id_md_attribute_value_id FOREIGN KEY (id) REFERENCES md_attribute_value(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_attribute_value ADD CONSTRAINT md_attribute_value_md_attribute_id_md_attribute_id FOREIGN KEY (md_attribute_id) REFERENCES md_attribute(id);
ALTER TABLE md_category_translation ADD CONSTRAINT md_category_translation_id_md_category_id FOREIGN KEY (id) REFERENCES md_category(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_category ADD CONSTRAINT md_category_md_category_parent_id_md_category_id FOREIGN KEY (md_category_parent_id) REFERENCES md_category(id);
ALTER TABLE md_category_object ADD CONSTRAINT md_category_object_md_category_id_md_category_id FOREIGN KEY (md_category_id) REFERENCES md_category(id) ON DELETE CASCADE;
ALTER TABLE md_content ADD CONSTRAINT md_content_md_user_id_md_user_id FOREIGN KEY (md_user_id) REFERENCES md_user(id) ON DELETE CASCADE;
ALTER TABLE md_content_relation ADD CONSTRAINT md_content_relation_md_content_id_second_md_content_id FOREIGN KEY (md_content_id_second) REFERENCES md_content(id);
ALTER TABLE md_content_relation ADD CONSTRAINT md_content_relation_md_content_id_first_md_content_id FOREIGN KEY (md_content_id_first) REFERENCES md_content(id);
ALTER TABLE md_currency_translation ADD CONSTRAINT md_currency_translation_id_md_currency_id FOREIGN KEY (id) REFERENCES md_currency(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_currency_convertion ADD CONSTRAINT md_currency_convertion_currency_to_md_currency_id FOREIGN KEY (currency_to) REFERENCES md_currency(id);
ALTER TABLE md_currency_convertion ADD CONSTRAINT md_currency_convertion_currency_from_md_currency_id FOREIGN KEY (currency_from) REFERENCES md_currency(id);
ALTER TABLE md_media_album ADD CONSTRAINT md_media_album_md_media_id_md_media_id FOREIGN KEY (md_media_id) REFERENCES md_media(id);
ALTER TABLE md_media_album ADD CONSTRAINT md_media_album_md_media_content_id_md_media_content_id FOREIGN KEY (md_media_content_id) REFERENCES md_media_content(id);
ALTER TABLE md_media_album_content ADD CONSTRAINT md_media_album_content_md_media_content_id_md_media_content_id FOREIGN KEY (md_media_content_id) REFERENCES md_media_content(id);
ALTER TABLE md_media_album_content ADD CONSTRAINT md_media_album_content_md_media_album_id_md_media_album_id FOREIGN KEY (md_media_album_id) REFERENCES md_media_album(id);
ALTER TABLE md_passport ADD CONSTRAINT md_passport_md_user_id_md_user_id FOREIGN KEY (md_user_id) REFERENCES md_user(id);
ALTER TABLE md_passport_remember_key ADD CONSTRAINT md_passport_remember_key_md_passport_id_md_passport_id FOREIGN KEY (md_passport_id) REFERENCES md_passport(id) ON DELETE CASCADE;
ALTER TABLE md_product_translation ADD CONSTRAINT md_product_translation_id_md_product_id FOREIGN KEY (id) REFERENCES md_product(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_product ADD CONSTRAINT md_product_md_unit_id_md_unit_id FOREIGN KEY (md_unit_id) REFERENCES md_unit(id);
ALTER TABLE md_product ADD CONSTRAINT md_product_md_currency_id_md_currency_id FOREIGN KEY (md_currency_id) REFERENCES md_currency(id);
ALTER TABLE md_profile_translation ADD CONSTRAINT md_profile_translation_id_md_profile_id FOREIGN KEY (id) REFERENCES md_profile(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_profile_attribute ADD CONSTRAINT md_profile_attribute_md_profile_id_md_profile_id FOREIGN KEY (md_profile_id) REFERENCES md_profile(id);
ALTER TABLE md_profile_attribute ADD CONSTRAINT md_profile_attribute_md_attribute_id_md_attribute_id FOREIGN KEY (md_attribute_id) REFERENCES md_attribute(id);
ALTER TABLE md_profile_object ADD CONSTRAINT md_profile_object_md_profile_id_md_profile_id FOREIGN KEY (md_profile_id) REFERENCES md_profile(id);
ALTER TABLE md_unit_translation ADD CONSTRAINT md_unit_translation_id_md_unit_id FOREIGN KEY (id) REFERENCES md_unit(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE md_unit_convertion ADD CONSTRAINT md_unit_convertion_to_unit_md_unit_id FOREIGN KEY (to_unit) REFERENCES md_unit(id);
ALTER TABLE md_unit_convertion ADD CONSTRAINT md_unit_convertion_from_unit_md_unit_id FOREIGN KEY (from_unit) REFERENCES md_unit(id);
ALTER TABLE md_user_search ADD CONSTRAINT md_user_search_md_user_id_md_user_id FOREIGN KEY (md_user_id) REFERENCES md_user(id) ON DELETE CASCADE;
