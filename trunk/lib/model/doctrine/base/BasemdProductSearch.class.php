<?php

/**
 * BasemdProductSearch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $lang
 * @property string $name
 * @property boolean $is_public
 * @property string $descripcion
 * @property string $codigo
 * @property string $premios
 * @property string $presentaciones
 * @property string $consistencia
 * @property string $textura
 * @property string $ojos
 * @property string $color
 * @property string $sabor
 * @property string $humedad
 * @property string $materiaGrasa
 * @property string $clasificacion
 * @property string $coliformes35
 * @property string $coliformes45
 * @property string $staphilococus
 * @property string $salmonella
 * @property string $listerya
 * @property double $price
 * @property mdProduct $mdProduct
 * 
 * @method integer         getId()             Returns the current record's "id" value
 * @method string          getLang()           Returns the current record's "lang" value
 * @method string          getName()           Returns the current record's "name" value
 * @method boolean         getIsPublic()       Returns the current record's "is_public" value
 * @method string          getDescripcion()    Returns the current record's "descripcion" value
 * @method string          getCodigo()         Returns the current record's "codigo" value
 * @method string          getPremios()        Returns the current record's "premios" value
 * @method string          getPresentaciones() Returns the current record's "presentaciones" value
 * @method string          getConsistencia()   Returns the current record's "consistencia" value
 * @method string          getTextura()        Returns the current record's "textura" value
 * @method string          getOjos()           Returns the current record's "ojos" value
 * @method string          getColor()          Returns the current record's "color" value
 * @method string          getSabor()          Returns the current record's "sabor" value
 * @method string          getHumedad()        Returns the current record's "humedad" value
 * @method string          getMateriaGrasa()   Returns the current record's "materiaGrasa" value
 * @method string          getClasificacion()  Returns the current record's "clasificacion" value
 * @method string          getColiformes35()   Returns the current record's "coliformes35" value
 * @method string          getColiformes45()   Returns the current record's "coliformes45" value
 * @method string          getStaphilococus()  Returns the current record's "staphilococus" value
 * @method string          getSalmonella()     Returns the current record's "salmonella" value
 * @method string          getListerya()       Returns the current record's "listerya" value
 * @method double          getPrice()          Returns the current record's "price" value
 * @method mdProduct       getMdProduct()      Returns the current record's "mdProduct" value
 * @method mdProductSearch setId()             Sets the current record's "id" value
 * @method mdProductSearch setLang()           Sets the current record's "lang" value
 * @method mdProductSearch setName()           Sets the current record's "name" value
 * @method mdProductSearch setIsPublic()       Sets the current record's "is_public" value
 * @method mdProductSearch setDescripcion()    Sets the current record's "descripcion" value
 * @method mdProductSearch setCodigo()         Sets the current record's "codigo" value
 * @method mdProductSearch setPremios()        Sets the current record's "premios" value
 * @method mdProductSearch setPresentaciones() Sets the current record's "presentaciones" value
 * @method mdProductSearch setConsistencia()   Sets the current record's "consistencia" value
 * @method mdProductSearch setTextura()        Sets the current record's "textura" value
 * @method mdProductSearch setOjos()           Sets the current record's "ojos" value
 * @method mdProductSearch setColor()          Sets the current record's "color" value
 * @method mdProductSearch setSabor()          Sets the current record's "sabor" value
 * @method mdProductSearch setHumedad()        Sets the current record's "humedad" value
 * @method mdProductSearch setMateriaGrasa()   Sets the current record's "materiaGrasa" value
 * @method mdProductSearch setClasificacion()  Sets the current record's "clasificacion" value
 * @method mdProductSearch setColiformes35()   Sets the current record's "coliformes35" value
 * @method mdProductSearch setColiformes45()   Sets the current record's "coliformes45" value
 * @method mdProductSearch setStaphilococus()  Sets the current record's "staphilococus" value
 * @method mdProductSearch setSalmonella()     Sets the current record's "salmonella" value
 * @method mdProductSearch setListerya()       Sets the current record's "listerya" value
 * @method mdProductSearch setPrice()          Sets the current record's "price" value
 * @method mdProductSearch setMdProduct()      Sets the current record's "mdProduct" value
 * 
 * @package    naturalia
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdProductSearch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_product_search');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('lang', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('descripcion', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('codigo', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('premios', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('presentaciones', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('consistencia', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('textura', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('ojos', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('color', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('sabor', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('humedad', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('materiaGrasa', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('clasificacion', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('coliformes35', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('coliformes45', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('staphilococus', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('salmonella', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('listerya', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('price', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mdProduct', array(
             'local' => 'id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}