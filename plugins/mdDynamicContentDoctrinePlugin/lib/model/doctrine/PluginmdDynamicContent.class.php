<?php

/**
 * mdDynamicContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    aeromarket
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class PluginmdDynamicContent extends BasemdDynamicContent
{

    public $mdUserIdTmp = 0;

    public $mdEmbedProfile = false;

    public $tmp_array_profile_id = NULL;

    //public $tmp_profile_id = NULL;

    public $tmp_array_md_attribute_values = array();

    public function retrieveDefault()
    {
        return "/mdDynamicContentDoctrinePlugin/images/noImage.jpg";
    }

    public function getObjectClass()
    {
        return get_class($this);
    }

    public function preSave($event)
    {
        //sfContext::getInstance()->getLogger()->log('mdDynamicContent - preSave, refrescamos el cache');
        Doctrine::getTable('mdDynamicContent')->refreshCache($this->getId());
    }

    public function postDelete($event)
    {
      //sfContext::getInstance()->getLogger()->log('mdDynamicContent - postDelete, refrescamos el cache');
      Doctrine::getTable('mdDynamicContent')->refreshCache($this->getId());
    }

    public function save(Doctrine_Connection $conn = null) 
    {
      if( sfConfig::get( 'sf_plugins_dynamic_priority', false ) )
      {
        if($this->getId() == 0)
        {
          $aux = self::retrieveLastPriorityNumber($this->getTypeName());
          $this->setPriority(-($aux) - 1);
        }
      }
      return parent::save($conn);
    }


    public static function retrieveCollection($typeName = NULL, $query = false)
    {
        if($query)
        {
            return Doctrine::getTable('mdDynamicContent')->retrieveCollectionQuery($typeName);
        }
        else
        {
            return Doctrine::getTable('mdDynamicContent')->retrieveCollection($typeName);
        }
    }

    public static function renderRelation($mdContentConcreteOwner, $configuration)
    {
        $result = new stdClass();
        $result->module = 'mdDynamicContent';
        $result->component = 'mdDynamicContentRelation';
        $result->parameters = array('_MD_Content_Concrete_Owner' => $mdContentConcreteOwner, '_MD_Configuration' => $configuration);
        return $result;
    }
    
    public static function changePriority($mdDynamicId, $value)
    {
      $mdDynamicContent = Doctrine::getTable('mdDynamicContent')->find($mdDynamicId);
      if($value > 0)
      {
        $aux = self::retrieveLastPriorityNumber($mdDynamicContent->getTypeName());
        if($mdDynamicContent->getPriority() == $aux)
        {
          return $aux;
        }
        $next = $mdDynamicContent->getPriority() + $value;
        $nextObject = Doctrine::getTable('mdDynamicContent')->retrieveByPriorityNumber($next, $mdDynamicContent->getTypeName());
        if($nextObject)
        {
          $nextObject->setPriority($mdDynamicContent->getPriority());
          $nextObject->save();          
        }
        $mdDynamicContent->setPriority($next);
        $mdDynamicContent->save();
        return $next;
      }
      else
      {
        if($mdDynamicContent->getPriority() == 1)
        {
          return 1;
        }
        $next = $mdDynamicContent->getPriority() + $value;
        $nextObject = Doctrine::getTable('mdDynamicContent')->retrieveByPriorityNumber($next, $mdCategory->getTypeName());
        if($nextObject)
        {
          $nextObject->setPriority($mdDynamicContent->getPriority());
          $nextObject->save();          
        }
        $mdCategory->setPriority($next);
        $mdCategory->save();
        return $next;      
      }
      return $value;
    }
	 
  public static function retrieveLastPriorityNumber($object_type)
  {
    $aux = Doctrine::getTable('mdDynamicContent')->retrieveLastPriorityNumber($object_type);
    //print_r($aux);
    return $aux['d_MAX'];
  }
  
  public static function retrieveCollectionQueryOfCategoryFilterByTypeName($mdCategoryId, $typeName, $equal = true, $order = "ASC")
  {
    return Doctrine::getTable('mdDynamicContent')->retrieveCollectionQueryOfCategoryFilterByTypeName($mdCategoryId, $typeName, $equal, $order);
  }
  
  public function retrieveChildsOfType($type, $query = false)
  {
      $mdContent = $this->retrieveMdContent();
      return Doctrine::getTable('mdDynamicContent')->retrieveAllRelatedDynamicOfCertainParent($mdContent->getId(), $type, $query);
  }

  public function getShowOnTableMdRelation()
  {
    return $this->getTypeName();
  }
    public function retrieveBackUpFields()
    {
        $list = array();
        $list[] = "id";
        $list[] = "publish_up_to";
        return $list;
    }

    public function bulkHasCategory()
    {
        return true;
    }

    public function bulkHasImages()
    {
        return true;
    }

    public function getBackendClosedBoxClass()
    {
        return "";
    }
}
